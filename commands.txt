vagrant init ubuntu/bionic64        #initilie server
vagrant up                          #download base image
vagrant ssh                         # to connect to server
cd /vagrant                         #everything in this directory is synchronized with our local machine
python -m venv ~/env                # virtual environment
source ~/env/bin/activate
deactivate
django-admin startproject profiles_project .
python manage.py startapp profiles_api
python manage.py runserver 0.0.0.0:8000     # run code in development server
http://127.0.0.1:8000/ -> website link
Admin:
email-suyog@gmail.com
name-suyog
password-suyog

#####################DSF
##### APIViews
###-->When to use it?
--Perfect for implementing complex logic
--Need full control over the logic
--Processing files and rendering a synchrnous response
--You are calling other APIs/services
--Accessing local files or data
#####################
##### ViewSets
###-->When to use it?
--A simple CRUD interface to your database
--A quick and simple API
--Little to no customization on the logic
--Working with standard data structures

chmod +x deploy/*.sh

####Ubuntu server deployment
1.connect to server
2.curl -sL https://github.com/suyogguragain/profile-rest-api/blob/main/deploy/setup.sh | sudo bash -
3. change settings -> AllowedHost =['ec2instancename','127.0.0.1']
##to update script
4. [/usr/local/apps/profiles-rest-api]sudo sh ./deploy/update.sh
5. create superuser in server
